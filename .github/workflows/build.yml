name: cpp-cmake-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  
jobs:
  build:
    name: Create Release
    runs-on: windows-2019
    env:
      libraryName: armadillo
      msvcTargetZip: armadillo-${{ github.ref_name }}-msvc2019.zip
    steps:
      - name: git clone
        run: git clone --branch 11.1.x https://gitlab.com/conradsnicta/armadillo-code.git

      - name: cmake
        shell: cmd
        run: cd armadillo-code && cmake.exe -G "Visual Studio 16 2019" -A x64 -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX="build/${{ env.libraryName }}" -B./build
        
        # Workaround here. It seems armadillo's CMakeLists.txt ignore 'INSTALL' project file extension. CMake in GitHub Action failed to run `cmake --install`
      - name: cmake build
        shell: cmd
        run: cd armadillo-code\build && cmake --build . --target INSTALL --config Debug -- /nologo /verbosity:minimal /maxcpucount 
        
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          path: ${{ env.libraryName }}
          directory: "armadillo-code/build"
          filename: "${{ env.msvcTargetZip }}"
          
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "armadillo-code/build/${{ env.msvcTargetZip }}"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}

          
          
